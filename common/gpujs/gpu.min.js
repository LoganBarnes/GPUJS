function next_pow2(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.log(2)))}var libLocation="../gpuLib/",InputType=Object.freeze({TEXTURE:0,IMG_VID:1,ARRAY:2,DATA:3,NUM_INPUT_TYPES:4}),GPUSolverLib=function(e,t,r){this.SolverPass=makeStruct("scene mesh textures dataRTs dataDims resultRT resultDim loaded nextPass"),this.passes={},this.camera=new THREE.PerspectiveCamera(75,e/t,.1,1e3);var a={};if(void 0!==r){var s=jQuery(r).attr({width:e,height:t});void 0!==s[0]?a.canvas=s[0]:console.error("no element '"+r+"'")}this.renderer=new THREE.WebGLRenderer(a),this.renderer.setSize(e,t),this.renderer.setClearColor(0,1),this.canvas=this.renderer.domElement,this.deltaTime,this.oldDeltaTime};GPUSolverLib.prototype.getCanvas=function(){return this.canvas},GPUSolverLib.prototype.getRenderer=function(){return this.renderer},GPUSolverLib.prototype.addInitialPass=function(e,t){if(void 0===t.texData)return void console.error("'texData' must be defined");if(void 0===t.texData[0].texInput||null===t.texData[0].texInput)return void console.error("the first texInput of 'texData' must be defined");var r=0,a=0;t.outputWidth?r=t.outputWidth:void 0!==t.texData[0].texInput.width&&(r=t.texData[0].texInput.width),t.outputHeight?a=t.outputHeight:void 0!==t.texData[0].texInput.height&&(a=t.texData[0].texInput.height);var s=r*a;void 0!==t.texData[0].elements&&(s=t.texData[0].elements);var i=libLocation+"shaders/default.frag";void 0!==t.shader?i=t.shader:t.prevtexInput=null;for(var n=new Array(t.texData.length),o=new Array(t.texData.length),l=new Array(3*t.texData.length),u=0;u<t.texData.length;u++){var p=t.texData[u],d=p.texInput,h=!1;void 0!==p.flipY&&(h=p.flipY);var v=0,E=0;void 0!==p.width?v=p.width:void 0!==d.width&&(v=d.width),void 0!==p.height?E=p.height:void 0!==d.height&&(E=d.width);var T=v*E;if(void 0!==p.elements&&(T=elements),d){var x;switch(p.inputType){case InputType.TEXTURE:x=d;break;case InputType.IMG_VID:x=new THREE.Texture(d);break;case InputType.ARRAY:v&&E||(v=next_pow2(Math.sqrt(d.length/4)),E=v,T=d.length/4,r&&a||(r=v,a=E,s=T));var m=v*E*4;if(m>d.length){var c=new Float32Array(v*E*4);c.set(d),x=new THREE.DataTexture(c,v,E,THREE.RGBAFormat,THREE.FloatType)}else x=new THREE.DataTexture(d,v,E,THREE.RGBAFormat,THREE.FloatType);break;default:return void console.error("inputType: '"+p.inputType+"' is not valid")}void 0!==p.linear&&p.linear===!0?(x.magFilter=THREE.LinearFilter,x.minFilter=THREE.LinearFilter):(x.magFilter=THREE.NearestFilter,x.minFilter=THREE.NearestFilter),x.wrapT=THREE.ClampToEdgeWrapping,x.wrapS=THREE.ClampToEdgeWrapping,x.generateMipmaps=!1,x.flipY=h,x.needsUpdate=!0,o[u]=x}l[3*u]=v,l[3*u+1]=E,l[3*u+2]=T}var R=new THREE.WebGLRenderTarget(r,a);R.texture.dispose(),R.texture=new THREE.DataTexture(null,r,a,THREE.RGBAFormat,THREE.FloatType),R.texture.magFilter=THREE.NearestFilter,R.texture.minFilter=THREE.NearestFilter;var g=[r,a,s],f=new this.SolverPass(new THREE.Scene,null,o,n,l,R,g,!1,null);this.passes[e]=f;var P=!1;void 0!==t.swapX&&(P=t.swapX);loadFiles([libLocation+"shaders/solver.vert",i],function(t){var r={textures:{type:"tv",value:f.textures},texDims:{type:"iv",value:f.dataDims},outputDim:{type:"iv",value:f.resultDim},prevDeltaTime:{type:"f",value:.001},deltaTime:{type:"f",value:.001},swapX:{type:"i",value:P}};f.mesh=new THREE.Mesh(new THREE.PlaneGeometry(2.01,2.01,1),new THREE.ShaderMaterial({uniforms:r,vertexShader:t[0],fragmentShader:t[1]})),f.scene.add(f.mesh),f.loaded=!0,console.log("added pass '"+e+"'")})},GPUSolverLib.prototype.connectPass=function(e,t,r){if(this.checkPassExists(e)){r=void 0===r?1:r;var a=this.getNumPasses(e),s=this.getPass(e,a-r),i=s.resultDim[0],n=s.resultDim[1];t.outputWidth&&(i=t.outputWidth),t.outputHeight&&(n=t.outputHeight);var o=libLocation+"shaders/default.frag";void 0!==t.shader&&(o=t.shader);for(var l=t.texData.length+1,u=new Array(l),p=new Array(l),d=new Array(3*l),h=0;r>h;h++)p[h]=s.resultRT.texture,d[3*h]=s.resultDim[0],d[3*h+1]=s.resultDim[1],d[3*h+2]=s.resultDim[2],s.nextPass&&(s=s.nextPass);for(var h=0;h<t.texData.length;h++){var v=t.texData[h],E=v.texInput,T=!1;void 0!==v.flipY&&(T=v.flipY);var x=0,m=0;E&&(x=E.width,m=E.height),void 0!==v.width&&(x=v.width),void 0!==v.height&&(m=v.height);var c=x*m;void 0!==v.elements&&(c=elements);var R=h+r;if(E){var g;switch(v.inputType){case InputType.TEXTURE:g=E;break;case InputType.IMG_VID:g=new THREE.Texture(E);break;case InputType.ARRAY:g=new THREE.DataTexture(E,x,m,THREE.RGBAFormat,THREE.FloatType);break;default:console.error("inputType: '"+v.inputType+"' is not valid")}g.magFilter=THREE.NearestFilter,g.minFilter=THREE.NearestFilter,g.wrapT=THREE.ClampToEdgeWrapping,g.wrapS=THREE.ClampToEdgeWrapping,g.generateMipmaps=!1,g.flipY=T,g.needsUpdate=!0,p[R]=g}d[3*R]=x,d[3*R+1]=m,d[3*R+2]=c}var f=new THREE.WebGLRenderTarget(i,n);f.texture.dispose(),f.texture=new THREE.DataTexture(null,i,n,THREE.RGBAFormat,THREE.FloatType),f.texture.magFilter=THREE.NearestFilter,f.texture.minFilter=THREE.NearestFilter;var P=[i,n,i*n],y=new this.SolverPass(new THREE.Scene,null,p,u,d,f,P,!1,null);s.nextPass=y;var w=!1;void 0!==t.swapX&&(w=t.swapX);loadFiles([libLocation+"shaders/solver.vert",o],function(t){var r={textures:{type:"tv",value:y.textures},texDims:{type:"iv",value:y.dataDims},outputDim:{type:"iv",value:y.resultDim},prevDeltaTime:{type:"f",value:.001},deltaTime:{type:"f",value:.001},swapX:{type:"i",value:w}};y.mesh=new THREE.Mesh(new THREE.PlaneGeometry(2.01,2.01,1),new THREE.ShaderMaterial({uniforms:r,vertexShader:t[0],fragmentShader:t[1]})),y.scene.add(y.mesh),y.loaded=!0,console.log("added connection to '"+e+"' (total: "+(a+1)+")")})}},GPUSolverLib.prototype.runPass=function(e,t,r){if(this.checkPassExists(e)){for(var a=this.passes[e];a;)a.mesh.material.uniforms.prevDeltaTime.value=t,a.mesh.material.uniforms.deltaTime.value=r,this.renderer.autoClear=!0,this.renderer.autoClearColor=!0,this.renderer.autoClearDepth=!0,this.renderer.render(a.scene,this.camera,a.resultRT),a=a.nextPass;return!0}return!1},GPUSolverLib.prototype.getSolverResultTexture=function(e,t){return this.checkPassExists(e)?void 0!==t?this.getPass(e,t).resultRT.texture:this.getFinalPass(e).resultRT.texture:null},GPUSolverLib.prototype.getSolverResultArray=function(e,t,r,a){if(this.checkPassExists(e)){var s;s=void 0!==a?this.getPass(e,a):this.getFinalPass(e);var i=s.resultDim[0],n=s.resultDim[1],o=new Float32Array(4*s.resultDim[2]),l=this.renderer.getContext();return l.readPixels(0,0,i,n,l.RGBA,l.FLOAT,o),o}return null},GPUSolverLib.prototype.getSolverResultWidth=function(e){return this.checkPassExists(e)?this.getFinalPass(e).resultDim[0]:-1},GPUSolverLib.prototype.getSolverResultHeight=function(e){return this.checkPassExists(e)?this.getFinalPass(e).resultDim[1]:-1},GPUSolverLib.prototype.getSolverResultSize=function(e){return this.checkPassExists(e)?this.getFinalPass(e).resultDim[2]:-1},GPUSolverLib.prototype.isPassLoaded=function(e){if(this.checkPassExists(e)){for(var t=this.passes[e];t.nextPass;){if(!t.loaded)return!1;t=t.nextPass}return t.loaded}return!1},GPUSolverLib.prototype.setUpdateTexture=function(e,t,r){if(this.checkPassExists(e)){var a=this.getPass(e,t);return a.textures[r].needsUpdate=!0,!0}return!1},GPUSolverLib.prototype.rotateSolverTargets=function(e){if(this.checkPassExists(e)){for(var t=this.passes[e],r=t.dataRTs.length,a=t.dataRTs[0],s=1;r>s;s++)t.dataRTs[s-1]=t.dataRTs[s];return t.dataRTs[r-1]=a,!0}return!1},GPUSolverLib.prototype.checkPassExists=function(e){return void 0===this.passes[e]?(console.error("Solver pass '"+e+"' does not exist."),!1):!0},GPUSolverLib.prototype.getFinalPass=function(e){for(var t=this.passes[e];t.nextPass;)t=t.nextPass;return t},GPUSolverLib.prototype.getNumPasses=function(e){for(var t=this.passes[e],r=1;t.nextPass;)++r,t=t.nextPass;return r},GPUSolverLib.prototype.getPass=function(e,t){for(var r=this.passes[e],a=0;r;){if(a===t)return r;++a,r=r.nextPass}return null};